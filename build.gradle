buildscript {
  repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "com.gorylenko.gradle-git-properties:gradle-git-properties:2.4.1"
    classpath 'de.undercouch:gradle-download-task:5.5.0'
  }
}

description = "Rossonet's static methods"
group = 'net.rossonet.commons'
version = '0.5.3'

ext {
	sourceCompatibility = 1.8
	ossrhPassword = System.getenv('OSSRH_PASSWORD')
}

repositories {
	mavenCentral()
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: "com.gorylenko.gradle-git-properties"
apply plugin: 'jacoco'
apply plugin: 'base'
apply plugin: 'distribution'
apply plugin: 'signing'
apply plugin: 'maven-publish'

dependencies {
  api group: 'org.slf4j', name: 'slf4j-api', version: '2.0.9'
  api group: 'org.json', name: 'json', version: '20231013'
  api group: 'org.yaml', name: 'snakeyaml', version: '2.2'
  api group: 'dnsjava', name: 'dnsjava', version: '3.5.3'
  api group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.16.0'
  api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.3'
  api group: 'com.google.guava', name: 'guava', version: '32.1.3-jre'
  api group: 'io.github.classgraph', name: 'classgraph', version: '4.8.165'
  // crittografia
  implementation group: 'org.bouncycastle', name: 'bcprov-jdk18on', version: '1.77'
  implementation group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: '1.77'
  implementation group: 'org.bouncycastle', name: 'bcutil-jdk18on', version: '1.77'
  // rules
  implementation group: 'org.apache.commons', name: 'commons-jexl3', version: '3.3'
  implementation group: 'org.mvel', name: 'mvel2', version: '2.5.1.Final'
  // docker client
  implementation group: 'com.github.docker-java', name: 'docker-java', version: '3.3.4'
  // OS and hardware diagnostic
  implementation group: 'com.github.oshi', name: 'oshi-core', version: '6.4.8'
  // cluster
  implementation group: 'org.jgroups', name: 'jgroups', version: '5.3.0.Final'
  // console
  implementation 'org.jline:jline:3.3.1'
  implementation 'org.apache.sshd:sshd-scp:2.12.0'
  implementation 'org.apache.sshd:sshd-core:2.12.0'
  implementation 'org.apache.sshd:sshd-sftp:2.12.0'
  implementation 'org.apache.sshd:sshd-common:2.12.0'
  // Opc UA Milo https://github.com/eclipse/milo
  //implementation group: 'org.eclipse.milo', name: 'sdk-client', version: '0.6.12'
  implementation group: 'org.eclipse.milo', name: 'sdk-server', version: '0.6.12'
  implementation group: 'org.eclipse.milo', name: 'dictionary-manager', version: '0.6.12'
  implementation group: 'org.eclipse.milo', name: 'dictionary-reader', version: '0.6.12'
  implementation group: 'org.eclipse.milo', name: 'bsd-parser-core', version: '0.3.8'
  // telemetry
  implementation group: 'org.apache.jena', name: 'apache-jena-libs', version: '4.10.0', ext: 'pom'
  implementation group: 'org.apache.jena', name: 'jena-core', version: '4.10.0'
  // ICE ( stun turn )
  implementation group: 'org.jitsi', name: 'ice4j', version: '3.0-68-gd289f12'
  // test
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
  testImplementation group: 'com.ginsberg', name: 'junit5-system-exit', version: '1.1.2'
  testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'
  testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.7.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
}

task eclipseClosedDependencies {}

task eclipseClosedDependencies_ {}

eclipse {
	classpath {
	    downloadJavadoc = true
	    downloadSources = true
	}
}

task view { doLast { println "Working on project ${project.name} [ ${project.description} ]" } }

jar.doLast { task ->
	ant.checksum file: task.archivePath
}

java {
  withJavadocJar()
  withSourcesJar()
}

gitProperties {
	failOnNoGitDirectory = false
	customProperty 'java-component', "${project.name}"
	customProperty 'java-version', "${project.version}"
	dateFormat = "yyyy-MM-dd HH:mm:ssZ"
	dateFormatTimeZone = 'GMT'
}

test {
  useJUnitPlatform()
}

javadoc{
	destinationDir = file("${project.buildDir}/docs/javadoc/${project.name}/")
	failOnError=false
}

publishing {
  publications {
    mavenJava(MavenPublication){
      artifactId = "${project.name}"
      from components.java
      versionMapping {
        usage('java-api') {
          fromResolutionOf('runtimeClasspath')
        }
        usage('java-runtime') {
          fromResolutionResult()
        }
      }
      pom {
        name = "${project.name}"
        description = "${project.description}"
        url = 'https://app.rossonet.net/'
        licenses {
          license {
            name = 'Apache License, Version 2.0'
            url = 'https://www.apache.org/licenses/LICENSE-2.0'
          }
        }
        developers {
          developer {
            id = 'ar4k'
            name = 'Andrea Ambrosini'
            email = 'andrea.ambrosini@rossonet.org'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/rossonet/rossonet-helper.git'
          developerConnection = 'scm:git:ssh://github.com:rossonet/rossonet-helper.git'
          url = 'https://github.com/rossonet/rossonet-helper/tree/master'
        }
      }
    }
  }
  repositories {
    maven {
      url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      name = "sonatype"
      credentials {
        username "rossonet"
        password "${ossrhPassword}"
      }
    }
  }
}

signing {
    sign publishing.publications.mavenJava
}
